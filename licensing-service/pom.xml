<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <!-- recall parent pom merge the following elements
        dependancies
        developers and contributors
        plugin lists (including reports)
        plugin executions with matching ids   - this we will use to set default dockerfile-maven-plugin executions in parent
        plugin configuration   - again this will be used for dockerfile-maven-plugin settings
        resources
    -->

    <parent>
        <groupId>com.thoughtmechanix</groupId>
        <version>0.0.1-SNAPSHOT</version>
        <artifactId>licensing-application</artifactId>
        <!--  <relativePath>../pom.xml</relativePath>  optional to specify the parent pom location, but default is one directory higher, so ../pom.xml is the defalut-->
    </parent>

    <!-- final name is <groupId>:<artifactId>:<version> -->
    <!--<groupId>com.thoughtmechanix</groupId>  while same as parent, just inherit.-->
    <artifactId>licensing-service</artifactId>  <!-- but here we what this to have its own artifact id so it has its own name -->
    <!--<version>0.0.1-SNAPSHOT</version>    while same as parent, just inherit.-->
    <packaging>jar</packaging>      <!-- parent specifies pom, but we want jar so must override parent settings. -->



    <name>Eagle Eye Licensing Service</name>
    <description>Licensing Service</description>

    <!--Docker build Config-->
    <properties>
        <start-class>com.thoughtmechanix.licenses.Application</start-class>
        <docker.image.name>${docker.image.prefix}/tmx-licensing-service</docker.image.name>
    </properties>


    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>1.5.7.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>1.5.7.RELEASE</version>
        </dependency>
    </dependencies>



    <build>
       <plugins>
           <!-- We use the Resources plugin to filer Dockerfile and run.sh, it inserts actual JAR filename -->
           <!-- The final Dockerfile will be created in target/ -->
           <plugin>
               <artifactId>maven-resources-plugin</artifactId>
               <version>3.0.2</version>
               <executions>
                   <execution>
                       <id>copy-resources</id>
                       <!-- here the phase you need -->
                       <phase>validate</phase>
                       <goals>
                           <goal>copy-resources</goal>
                       </goals>
                       <configuration>
                           <outputDirectory>${basedir}/target</outputDirectory>
                           <resources>
                               <resource>
                                   <directory>src/main/docker</directory>
                                   <filtering>true</filtering>
                               </resource>

                           </resources>
                       </configuration>
                   </execution>
               </executions>
           </plugin>

           <plugin>
               <groupId>com.spotify</groupId>
               <artifactId>dockerfile-maven-plugin</artifactId>
               <version>1.3.6</version>
               <configuration>
                   <contextDirectory>${project.basedir}/target</contextDirectory>
               </configuration>
           </plugin>

           <plugin>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-maven-plugin</artifactId>
               <version>1.5.7.RELEASE</version>
           </plugin>
       </plugins>
   </build>
</project>
