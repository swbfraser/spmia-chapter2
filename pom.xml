<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.4.RELEASE</version>
  </parent>


  <groupId>com.thoughtmechanix</groupId>
  <version>0.0.1-SNAPSHOT</version>
  <artifactId>licensing-application</artifactId>
  <packaging>pom</packaging>   <!-- indicate this is a parent pom...-->


  <name>swfraser-parent-pom</name>
  <description>Parent Pom for the thoughtmechanix project</description>

  <!--Docker build Config-->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
    <docker.image.tag>chapter2</docker.image.tag>
    <docker.image.prefix>${env.USER}</docker.image.prefix>
  </properties>


  <!-- note that modules indicate what should be build as one and have nothing to do with inheritance. -->
  <modules>
    <module>licensing-service</module>  <!-- directory of module, by practice the same as the module id -->
  </modules>

  <!-- but our modules by choice will all inherit from this pom, and so anything specified below are defaults for the
       modules that choose to indicate this is their parent pom -->

  <build>
  <plugins>
  <plugin>
    <groupId>com.spotify</groupId>
    <artifactId>dockerfile-maven-plugin</artifactId>
    <version>1.3.6</version>
    <executions>
      <execution>
        <id>default</id>
        <goals>
          <goal>build</goal>
          <!--<goal>push</goal>-->    <!-- use this if you have a repository set up..., otherwise best to leave it off -->
        </goals>
      </execution>
    </executions>
    <configuration>
      <repository>${docker.image.prefix}/${project.artifactId}</repository>

      <!--<tag>${docker.image.tag}</tag>   this is the original tag used for the book to tab by chapter, but for me using versions as in nect line.-->
      <tag>${project.version}</tag>

      <!-- the build Args are from the original sample on the dockerfile git README, leaving here for when I figure out what the heck they are for. -->
      <!--<buildArgs>-->
        <!--<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>-->
      <!--</buildArgs>-->
    </configuration>
  </plugin>
  </plugins>
  </build>

</project>
